#/!bin/bash #Код рабочий

options=(  # задаем список значений, которым будем передавать свойства 
	'1' #  Перечисляем их, 1, 2, 3, 4, 5
	"2"
	'3'
	'4'
	'5'
)
echo 'Please choose an option' #  Стартовое сообщений
select input in "${options[@]}"; do # Задаем конструкцию к инпуту, вместо @ будем подставлять описанные значения выше
	case "$input" in # в зависимости от выбранного значения в инпут будем получать 
		"${options[0]}") # если был нажата 1 - то получим название ветки. 0 написан по причине того, что отсчет начинается с 0, а не с 1.
			ls 
			;; 
		"${options[1]}") # в случае нажатия на 2 - получим время и дату
			date $'+Time: %T\nDate: %D' # задаем формат
			;;
		"${options[2]}")# в случае нажатия на 3
			read -p 'What file do you wish to check? ' finput # получим сообщение и строку ввода
			if [[ -d $finput ]]; then # проверка на директорию
				format='%s is a directory.\n' # вывод директории, если таковая была найдена
			elif [[ -f $finput ]]; then # проверка на название файла
				format='%s is a file.\n' # вывод названия файла, если таковой имеет
			else # проверка на неверно введенное значение
				format='%s does not exist.\n' 
			fi # закрываем конструкцию
			printf "$format" "$finput" # приглашение к последующему вводу
			;;
		"${options[3]}") # в случае нажатия на 4
			read -p 'Please enter filename: ' binput # просьба ввести название файла
			cp "$binput"{,.bak} #проверка наличия такого файла с форматом .bak
			;;  
		"${options[4]}") # в случае нажатия на 5
			break # выход из программы
			;; 
		*) 
			echo 'Not a valid option.' # сообщение о нажатии кнопки, за пределами заданный значений
			;; 
	esac 
done  # закрываем функцию 